@model Afpetit.Models.Utilisateur

@{
    ViewBag.Title = "Connexion";
}

<h2>Connexion</h2>
@{
    if (ViewBag.utilisateur != null)
    {
        Session["Utilisateur"] = ViewBag.utilisateur;
        Html.Action("ListeInscrits","Utilisateurs",null);
    }    
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Utilisateur</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (!String.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Vous avez un message : </strong> @ViewBag.Message
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Matricule, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Matricule, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Matricule, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Connexion" class="btn btn-outline-success mr-2" /> @Html.ActionLink("Retour", "Index", "Home", null, new { @class = "btn btn-outline-danger" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
